<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    
    <!-- NuGet Package Information -->
    <PackageId>MinjaSharp</PackageId>
    <Authors>$(Authors)</Authors>
    <Description>C# bindings for Minja templating engine</Description>
    <PackageTags>template;minja;binding</PackageTags>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <RepositoryUrl>https://github.com/phil-scott-78/minjasharp</RepositoryUrl>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    
    <!-- Enable packing native libraries -->
    <IncludeContentInPack>true</IncludeContentInPack>
  </PropertyGroup>

  <!-- Native library definitions for each platform -->
  <ItemGroup>
    <!-- Windows x64 - Always include for development -->
    <None Include="..\cpp\build\bin\$(Configuration)\minja_shim_ext.dll" Link="minja_shim_ext.dll"
          Condition="Exists('..\cpp\build\bin\$(Configuration)\minja_shim_ext.dll')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Pack>true</Pack>
      <PackagePath>runtimes\win-x64\native</PackagePath>
    </None>
    <!-- Fallback for CI builds where Release folder structure is used explicitly -->
    <None Include="..\cpp\build\bin\Release\minja_shim_ext.dll" Link="minja_shim_ext.dll"
          Condition="!Exists('..\cpp\build\bin\$(Configuration)\minja_shim_ext.dll') AND Exists('..\cpp\build\bin\Release\minja_shim_ext.dll')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Pack>true</Pack>
      <PackagePath>runtimes\win-x64\native</PackagePath>
    </None>
  </ItemGroup>

  <!-- Cross-platform libraries - Always try Configuration folder first, then Release folder -->
  <ItemGroup>
    <!-- Linux x64 single-config -->
    <None Include="..\cpp\build\lib\libminja_shim_ext.so" Link="libminja_shim_ext.so"
          Condition="Exists('..\\cpp\\build\\lib\\libminja_shim_ext.so')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Pack>true</Pack>
      <PackagePath>runtimes\linux-x64\native</PackagePath>
    </None>
    <!-- Linux x64 -->
    <None Include="..\cpp\build\lib\$(Configuration)\libminja_shim_ext.so" Link="libminja_shim_ext.so"
          Condition="Exists('..\cpp\build\lib\$(Configuration)\libminja_shim_ext.so')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Pack>true</Pack>
      <PackagePath>runtimes\linux-x64\native</PackagePath>
    </None>
    <None Include="..\cpp\build\lib\Release\libminja_shim_ext.so" Link="libminja_shim_ext.so"
          Condition="!Exists('..\cpp\build\lib\$(Configuration)\libminja_shim_ext.so') AND Exists('..\cpp\build\lib\Release\libminja_shim_ext.so')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Pack>true</Pack>
      <PackagePath>runtimes\linux-x64\native</PackagePath>
    </None>
  
    <!-- macOS x64 -->
    <None Include="..\cpp\build\lib\$(Configuration)\libminja_shim_ext.dylib" Link="libminja_shim_ext.dylib"
          Condition="Exists('..\cpp\build\lib\$(Configuration)\libminja_shim_ext.dylib')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Pack>true</Pack>
      <PackagePath>runtimes\osx-x64\native</PackagePath>
    </None>
    <None Include="..\cpp\build\lib\Release\libminja_shim_ext.dylib" Link="libminja_shim_ext.dylib"
          Condition="!Exists('..\cpp\build\lib\$(Configuration)\libminja_shim_ext.dylib') AND Exists('..\cpp\build\lib\Release\libminja_shim_ext.dylib')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Pack>true</Pack>
      <PackagePath>runtimes\osx-x64\native</PackagePath>
    </None>
  
    <!-- macOS ARM64 -->
    <None Include="..\cpp\build\lib\$(Configuration)\libminja_shim_ext_arm64.dylib" Link="libminja_shim_ext_arm64.dylib"
          Condition="Exists('..\cpp\build\lib\$(Configuration)\libminja_shim_ext_arm64.dylib')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Pack>true</Pack>
      <PackagePath>runtimes\osx-arm64\native</PackagePath>
    </None>
    <None Include="..\cpp\build\lib\Release\libminja_shim_ext_arm64.dylib" Link="libminja_shim_ext_arm64.dylib"
          Condition="!Exists('..\cpp\build\lib\$(Configuration)\libminja_shim_ext_arm64.dylib') AND Exists('..\cpp\build\lib\Release\libminja_shim_ext_arm64.dylib')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Pack>true</Pack>
      <PackagePath>runtimes\osx-arm64\native</PackagePath>
    </None>
  </ItemGroup>

  <!-- MinVer for automatic versioning -->
  <ItemGroup>
    <PackageReference Include="MinVer" Version="4.3.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <None Include="..\..\README.md" Pack="true" PackagePath="\" />
  </ItemGroup>

</Project>